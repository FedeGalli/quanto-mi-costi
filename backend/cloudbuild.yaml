steps:
  # Step 1: Build the Go application
  - name: "golang:1.22"
    args: ["go", "build", "-o", "server", "."]
    env:
      - "CGO_ENABLED=0"
      - "GOOS=linux"
      - "GOARCH=amd64"

  # Step 2: Build the Docker image
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "build"
      - "-t"
      - "europe-west4-docker.pkg.dev/$PROJECT_ID/firebaseapphosting-images/backend-go:$BUILD_ID"
      - "-t"
      - "europe-west4-docker.pkg.dev/$PROJECT_ID/firebaseapphosting-images/backend-go:latest"
      - "."

  # Step 3: Push the Docker image to Artifact Registry
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "push"
      - "europe-west4-docker.pkg.dev/$PROJECT_ID/firebaseapphosting-images/backend-go:$BUILD_ID"

  - name: "gcr.io/cloud-builders/docker"
    args:
      - "push"
      - "europe-west4-docker.pkg.dev/$PROJECT_ID/firebaseapphosting-images/backend-go:latest"

# Specify the images to be stored
images:
  - "europe-west4-docker.pkg.dev/$PROJECT_ID/firebaseapphosting-images/backend-go:$BUILD_ID"
  - "europe-west4-docker.pkg.dev/$PROJECT_ID/firebaseapphosting-images/backend-go:latest"

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: "E2_HIGHCPU_8"
